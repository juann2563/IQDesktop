{"version":3,"file":"arch.js","sourceRoot":"","sources":["../src/arch.ts"],"names":[],"mappings":";;;;;;;;AAAA,IAAY,AAEX;AAFD,WAAY,AAAI;AACd,6BAAI;AAAE,4BAAG;AAAE,+BAAM,AACnB;AAAC,GAFW,AAAI,wBAAJ,AAAI,OAEf,AAED,AAAM;2BAA4B,AAAU;AAC1C,AAAM,WAAC,AAAI,SAAK,AAAI,KAAC,AAAI,OAAG,AAAM,AAAG,SAAC,AAAI,SAAK,AAAI,KAAC,AAAG,MAAG,AAAO,UAAG,AAAQ,AAAC,AAC/E;AAAC,AAID,AAAM;uBAAwB,AAAU;AACtC,AAAM,WAAC,AAAI,SAAK,AAAI,KAAC,AAAG,MAAG,AAAE,AAAG,SAAI,AAAI,KAAC,AAAI,AAAC,KAAE,AAClD;AAAC,AAED,AAAM;wBAAyB,AAAY;AACzC,AAAE,AAAC,QAAC,AAAI,SAAK,AAAK,AAAC,OAAC,AAAC;AACnB,AAAM,eAAC,AAAI,KAAC,AAAG,AACjB;AAAC;AACD,AAAE,AAAC,QAAC,AAAI,SAAK,AAAM,AAAC,QAAC,AAAC;AACpB,AAAM,eAAC,AAAI,KAAC,AAAI,AAClB;AAAC;AACD,AAAE,AAAC,QAAC,AAAI,SAAK,AAAQ,AAAC,UAAC,AAAC;AACtB,AAAM,eAAC,AAAI,KAAC,AAAM,AACpB;AAAC;AAED,UAAM,IAAI,AAAK,AAAC,0BAAoB,AAAI,IAAE,AAAC,AAC7C;AAAC","sourcesContent":["export enum Arch {\n  ia32, x64, armv7l\n}\n\nexport function toLinuxArchString(arch: Arch) {\n  return arch === Arch.ia32 ? \"i386\" : (arch === Arch.x64 ? \"amd64\" : \"armv7l\")\n}\n\nexport type ArchType = \"x64\" | \"ia32\" | \"armv7l\"\n\nexport function getArchSuffix(arch: Arch): string {\n  return arch === Arch.x64 ? \"\" : `-${Arch[arch]}`\n}\n\nexport function archFromString(name: string): Arch {\n  if (name === \"x64\") {\n    return Arch.x64\n  }\n  if (name === \"ia32\") {\n    return Arch.ia32\n  }\n  if (name === \"armv7l\") {\n    return Arch.armv7l\n  }\n\n  throw new Error(`Unsupported arch ${name}`)\n}"]}
